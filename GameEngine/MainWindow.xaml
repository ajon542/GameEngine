<Window x:Class="GameEngine.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:viewModel="clr-namespace:GameEngine.ViewModel"
        xmlns:view="clr-namespace:GameEngine.View"
        xmlns:ad="http://schemas.xceed.com/wpf/xaml/avalondock"
        Title="MainWindow" Height="800" Width="1400">

    <!--
    This demonstrates a way to switch between views dynamically.
    By setting the DataContext property of the MainWindow class,
    the appropriate view for that view-model will be shown.
    See: http://stackoverflow.com/questions/23128378/wpf-design-multiple-views-in-one-window
    -->
    <Window.Resources>
        <DataTemplate DataType="{x:Type viewModel:MainViewModel}">
            <view:MainView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:SceneViewModel}">
            <view:SceneView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:GameViewModel}">
            <view:GameView/>
        </DataTemplate>
    </Window.Resources>

    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="New"/>
                <MenuItem Header="Exit" Command="{Binding ExitCommand}"/>
            </MenuItem>
            <MenuItem Header="Edit">
                <MenuItem Header="Preferences"/>
            </MenuItem>
            <MenuItem Header="Window">
                <MenuItem Header="Game"/>
                <MenuItem Header="Hierarchy"/>
                <MenuItem Header="Profile"/>
                <MenuItem Header="Scene"/>
            </MenuItem>
            <MenuItem Header="Help">
                <MenuItem Header="About"/>
            </MenuItem>
        </Menu>
        <!--
        Without setting the content presenter, the MainView does not get shown.
        DataContext = new MainViewModel();
        -->
        <ContentPresenter Content="{Binding}"/>
    </DockPanel>

    <!-- This is an example of avalon doc. No idea how to incorporate just yet. -->
    <!--<ad:DockingManager x:Name="dockManager">
        <ad:LayoutRoot>
            <ad:LayoutPanel Orientation="Horizontal">
                <ad:LayoutPanel Orientation="Vertical">
                    <ad:LayoutPanel Orientation="Horizontal">
                        <ad:LayoutDocumentPaneGroup x:Name="leftDocumentGroup">
                            <ad:LayoutDocumentPane>
                                <ad:LayoutDocument Title="Left Doc"></ad:LayoutDocument>
                            </ad:LayoutDocumentPane>
                        </ad:LayoutDocumentPaneGroup>
                        <ad:LayoutDocumentPaneGroup x:Name="rightDocumentGroup">
                            <ad:LayoutDocumentPane>
                                <ad:LayoutDocument Title="Right Doc"></ad:LayoutDocument>
                            </ad:LayoutDocumentPane>
                        </ad:LayoutDocumentPaneGroup>
                    </ad:LayoutPanel>
                    <ad:LayoutAnchorablePaneGroup x:Name="bottomAnchorableGroup">
                        <ad:LayoutAnchorablePane>
                            <ad:LayoutAnchorable Title="Bottom Anch"></ad:LayoutAnchorable>
                        </ad:LayoutAnchorablePane>
                    </ad:LayoutAnchorablePaneGroup>
                </ad:LayoutPanel>
                <ad:LayoutAnchorablePaneGroup x:Name="rightAnchorableGroup">
                    <ad:LayoutAnchorablePane>
                        <ad:LayoutAnchorable Title="Right Anch"></ad:LayoutAnchorable>
                    </ad:LayoutAnchorablePane>
                </ad:LayoutAnchorablePaneGroup>
            </ad:LayoutPanel>
        </ad:LayoutRoot>
    </ad:DockingManager>-->
</Window>
